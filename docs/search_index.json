[["index.html", "POP77001 Computer Programming for Social Scientists About This Module Instructors Module Meetings Prerequisites Hardware and Software Materials Assessment Assessment criteria Plagiarism", " POP77001 Computer Programming for Social Scientists Tom Paskhalis, Department of Political Science, Trinity College Dublin 2022 About This Module This module provides foundational knowledge of computer programming concepts and software engineering practices. It introduces students to major data science programming languages and workflows, with a focus on social science data and research questions. Students will be introduced to R and Python, two principal data science programming languages. This course covers basic and intermediate programming concepts, such as object types, functions, control flow, testing and debugging. Particular emphasis will be made on data handling and analytical tasks with a focus on problems in social sciences. Homeworks will include hands-on coding exercises. In addition, students will apply their programming knowledge on a research project at the end of the module. Instructors Tom Paskhalis, Office Hours: Thursday 11:00-13:00 online Martyn Egan Module Meetings 11 two-hour lectures Monday 14:00 in PX 201 7-9 Leinster Street South 11 two-hour tutorials Thursday 09:00 in PX 201 7-9 Leinster Street South No lecture/tutorial in Week 7 Week Lecture (Monday) Language Topic Due (Friday) 1 12 September - Introduction to Computation 2 19 September R R Basics 3 26 September R Control Flow in R Assignment 1 4 3 October R Functions in R 5 10 October R Debugging and Testing in R Assignment 2 6 17 October R Data Wrangling in R 7 24 October - - 8 31 October Python Fundamentals of Python Programming I 9 7 November Python Fundamentals of Python Programming II Assignment 3 10 14 November Python Data Wrangling in Python 11 21 November Python, R Complexity and Performance Assignment 4 12 28 November Python, R Web Scraping Prerequisites This is an introductory class and no prior experience with programming is required. Hardware and Software Laptop with Windows/Mac/Linux OS (no Chrome books) Required software: Jupyter - web-based interactive computational environment Python (version 3+) - versatile programming language R (version 4+) - statistical programming language Additional software: Git - version control system GitHub - git-based online platform for code hosting RStudio - integrated development environment for R Spyder - integrated development environment for Python Visual Studio Code - feature-rich text editor See syllabus for further details. Materials Books: Guttag, John. 2021 Introduction to Computation and Programming Using Python: With Application to Computational Modeling and Understanding Data. 3rd ed.¬†Cambridge, MA: The MIT Press Matloff, Norman. 2011. The Art of R Programming: A Tour of Statistical Software Design. San Francisco, CA: No Starch Press. McKinney, Wes. 2017. Python for Data Analysis: Data Wrangling with Pandas, NumPy, and IPython. 2nd ed.¬†Sebastopol, CA: O‚ÄôReilly Media Peng, Roger D. 2016. R Programming for Data Science. Leanpub Wickham, Hadley, and Garrett Grolemund. 2017. R for Data Science: Import, Tidy, Transform, Visualize, and Model Data. Sebastopol, CA: O‚ÄôReilly Media. Wickham, Hadley. 2019. Advanced R. 2nd ed.¬†Boca Raton, FL: Chapman and Hall/CRC. Additional online resources: Git Book The Hitchhiker‚Äôs Guide to Python Python For You and Me Python Wikibook Python 3 Documentation (intermediate and advanced) R Documentation R Inferno Assessment Participation (10 %) Tutorial attendance 4 assignments (40%) Bi-weekly programming exercises Due by 23:59 on Friday of weeks 3, 5, 9 and 11 on Blackboard Research project (50%) Final Python/R project demonstrating familiarity with programming concepts and ability to communicate results Due by 23:59 on Friday, 16 December 2022 Assessment criteria ‚úîÔ∏è Code exists ‚åö Code runs and does what it has to do üìú Code is legible (meaningful naming, comments) ‚öôÔ∏è Code is modular (no redundacies, use of abstractions) üèéÔ∏è Code is optimized (no needless loops, runs fast) Marks at Trinity: https://www.tcd.ie/academicregistry/exams/student-guide/ Plagiarism Plagiarising computer code is as serious as plagiarising text (see Google LLC v. Oracle America, Inc.) All submitted programming assignments and final project should be done individually You may discuss general approaches to solutions with your peers But do not share or view each others code You can use online resources but give credit in the comments Check the Trinity‚Äôs guide on the levels and consequences of plagiarism "],["introduction-to-computation.html", "1 Introduction to Computation Required Readings Additional Readings Tutorial", " 1 Introduction to Computation Lecture Slides (html) Lecture Slides (pdf) Lecture Slides (ipynb) Tutorial Exercise (ipynb) Tutorial Exercise (pdf) Tutorial Exercise (html) We start by discussing the core software development concepts such as computers, program- ming languages and algorithms. Required Readings Guttag Ch 1: Getting Started Wing, Jeannette M. 2006. ‚ÄúComputational Thinking.‚Äù Communications of the ACM, 49 (3): 33‚Äì35. doi: 10.1145/1118178.1118215 Additional Readings Wickham &amp; Grolemund Ch 1: Introduction McKinney Ch 1: Preliminaries Tutorial Installation of Python and R Introduction to Jupyter Notebooks and alternative IDEs Work in command-line interfaces (CLIs) GitHub Workflow "],["r-basics.html", "2 R Basics Required Readings Additional Readings Tutorial", " 2 R Basics Lecture Slides (html) Lecture Slides (pdf) Lecture Slides (ipynb) Tutorial Exercise (ipynb) Tutorial Exercise (pdf) Tutorial Exercise (html) This week we will discuss the fundamental concepts of programming, such as variables, as- signment and object types with application to R. In addition, we will start using some built-in functions. Required Readings Wickham. Chapters 2: Data Structures, 3: Subsetting, 4: Vocabulary; Peng Chs 5: R Nuts and Bolts, 10: Subsetting R Objects, 11: Vectorized Operations; Additional Readings Matloff. Chs 2: Vectors, 3: Matrices &amp; Arrays, 4: Lists, 5: Data Frames, 6: Factors &amp; Tables; Tutorial R core data structures Subsetting and working with attributes Application of methods and functions "],["control-flow-in-r.html", "3 Control Flow in R Required Readings Additional Readings Tutorial Assignment 1", " 3 Control Flow in R Lecture Slides (html) Lecture Slides (pdf) Lecture Slides (ipynb) Tutorial Exercise (ipynb) Tutorial Exercise (pdf) Tutorial Exercise (html) Assignment This week we will focus on the key ways of controlling the flow of programs in R. We will look at branching and loops, common for all programming languages and the details of their design in R. Required Readings Peng Ch 14: Control Structures; Additional Readings Matloff Ch 7: R Programming Structures; Tutorial Conditional statements and iterations Working with functions in R Assignment 1 R Basics and control flow Due at 23:59 on Friday, 30th September (submission on Blackboard) Rename the file from 01_assignment.ipynb to 01_assignment_lastname_firstname_studentnumber.ipynb before submission "],["functions-in-r.html", "4 Functions in R Required Readings Additional Readings Tutorial", " 4 Functions in R This week we will discuss functions, the main building block of a program implemented in any language. Required Readings Peng Chs 15: Functions, 16: Scoping Rules; Wickham Ch 6: Functions; Additional Readings Wickham Chs 10: Functional Programming, 11: Functionals, 12: Function Operators; Tutorial Implementing functions in R "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
